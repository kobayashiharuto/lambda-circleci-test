version: 2.0

jobs:
  deploy_lambda_test:
    docker:
      - image: docker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: env debug
          command: |
            env
            apk add nodejs
            apk add npm
            npm install -g serverless
            serverless -v
      - run:
          name: env debug
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            aws --version

      - run:
          name: build image
          command: |
            ps aux
            docker build -t tensorflow-lambda-test .
            docker tag tensorflow-lambda-test ${AWS_ACCOUNTID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${FUNC_NAME}
            ECR_DIGEST=`docker push ${AWS_ACCOUNTID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${FUNC_NAME} | grep digest | cut -d ' ' -f3`
            echo &{ECR_DIGEST}
      - run:
          name: git clone
          command: |
            git clone https://github.com/kobayashiharuto/lambda-circleci-test.git
            cd lambda-circleci-test
      - run:
          name: aws auth
          command: |
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
            aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNTID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - run:
          name: serverless deploy
          command: |
            sudo npm install -g serverless
            serverless config credentials --provider aws --key ${AWS_ACCESS_KEY_ID_STG} --secret ${AWS_SECRET_ACCESS_KEY_STG}
            serverless deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - deploy_lambda_test:
          filters:
            branches:
              only: main
